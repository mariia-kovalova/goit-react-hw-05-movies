{"version":3,"file":"static/js/76.d62cb482.chunk.js","mappings":"kTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAU,sBAAuB,CACtDI,OAAQ,CACNC,QAASJ,EACTE,KAAAA,KAJ0B,uBACtBG,EADsB,EACtBA,KADsB,kBAQvBA,GARuB,2CAAH,sDAWhBC,EAAiB,mCAAG,kGAASC,EAAT,EAASA,MAAOL,EAAhB,EAAgBA,KAAhB,SACRH,EAAAA,EAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CACNC,QAASJ,EACTO,MAAAA,EACAL,KAAAA,EACAM,eAAe,KANY,uBACvBH,EADuB,EACvBA,KADuB,kBAUxBA,GAVwB,2CAAH,sDAajBI,EAAW,mCAAG,WAAMC,GAAN,yFACFX,EAAAA,EAAAA,IAAA,iBAAoBW,GAAY,CACrDP,OAAQ,CACNC,QAASJ,KAHY,uBACjBK,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAoBXM,EAAW,mCAAG,WAAMD,GAAN,yFACFX,EAAAA,EAAAA,IAAA,gBAAmBW,EAAnB,YAAuC,CAC5DP,OAAQ,CACNC,QAASJ,KAHY,uBACjBK,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUXO,EAAc,mCAAG,WAAMF,GAAN,yFACLX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAwC,CAC7DP,OAAQ,CACNC,QAASJ,KAHe,uBACpBK,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,qD,wFCxDdQ,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACpB,+BACE,SAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,MAAO,OAAQC,OAAQ,SAAAC,GAAK,OAAIA,EAAMD,OAAOE,OAAS,CAA1B,GAClCN,KAAMA,EAFR,UAIE,SAACO,EAAA,EAAD,CAAkBJ,MAAM,eANR,C,kOCATK,EAAOC,EAAAA,EAAAA,IAAH,wMAYJC,EAAQD,EAAAA,EAAAA,IAAH,6QAgBLE,EAAWF,EAAAA,EAAAA,IAAH,iLAURG,EAAYH,EAAAA,EAAAA,GAAH,0IASTI,EAAQJ,EAAAA,EAAAA,MAAH,2LAYLK,EAAYL,EAAAA,EAAAA,GAAH,0QAcTM,EAAYN,EAAAA,EAAAA,GAAH,iMAWTO,EAAOP,EAAAA,EAAAA,KAAH,2TAgBJQ,EAAYR,EAAAA,EAAAA,KAAH,2QAeTS,EAAQT,EAAAA,EAAAA,IAAH,2NAcLU,EAAaV,EAAAA,EAAAA,IAAH,wIAQVW,EAAmBX,EAAAA,EAAAA,EAAH,wIAQhBY,EAAOZ,EAAAA,EAAAA,GAAH,8EAMJa,GAAeb,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAH,4G,SCtIZe,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEfC,EAQEL,EARFK,YACAC,EAOEN,EAPFM,MACAC,EAMEP,EANFO,eACAC,EAKER,EALFQ,aACAC,EAIET,EAJFS,WACAC,EAGEV,EAHFU,WACAC,EAEEX,EAFFW,SACAC,EACEZ,EADFY,OAGIC,GAAMC,EAAAA,EAAAA,IAAOT,GACbU,GAAcC,EAAAA,EAAAA,IAAqBJ,GACnCK,GAAYC,EAAAA,EAAAA,IAAYV,GACxBW,GAAkBD,EAAAA,EAAAA,IAAYR,GAEpC,OACE,UAAC3B,EAAD,YACE,SAACE,EAAD,CAAOmC,UAAU,WAAjB,UACE,gBAAKP,IAAKA,EAAKQ,IAAKf,OAEtB,UAACpB,EAAD,YACE,SAACC,EAAD,UAAYmB,KACZ,SAAClB,EAAD,WACE,8BACE,2BACE,SAACC,EAAD,4BACA,UAACC,EAAD,YACE,SAACC,EAAD,UAAO0B,IADT,MAC4B,SAACzB,EAAD,UAAYiB,WAG1C,2BACE,SAACpB,EAAD,0BACA,SAACC,EAAD,UAAY6B,QAEd,2BACE,SAAC9B,EAAD,8BACA,SAACC,EAAD,UAAYiB,OAEbK,EAAOU,OAAS,IACf,2BACE,SAACjC,EAAD,qBACA,SAACC,EAAD,UAAYyB,YAKnBJ,IACC,UAAClB,EAAD,YACE,SAACC,EAAD,yBACA,SAACC,EAAD,UAAmBgB,QAGvB,4BACE,mDACA,UAACf,EAAD,YACE,yBACE,SAACC,EAAD,CACE0B,GAAE,kBAAatB,EAAb,SACFuB,MAAOrB,EAASqB,MAFlB,qBAOF,yBACE,SAAC3B,EAAD,CACE0B,GAAE,kBAAatB,EAAb,YACFuB,MAAOrB,EAASqB,MAFlB,kCAYb,E,6BClCD,EAnDyB,WAAO,IAAD,IAEvBC,EAAI,qBADOrB,EAAAA,EAAAA,MACKoB,aAAZ,aAAG,EAAgBE,YAAnB,QAA2B,IAC7BzB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0B0B,EAAAA,EAAAA,UAAS,MAAnC,eAAO3B,EAAP,KAAc4B,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,EAAS,MACT,IAAME,EAAO,mCAAG,WAAMjC,GAAN,uFAEZ6B,GAAa,GAFD,UAGO5D,EAAAA,EAAAA,IAAY+B,GAHnB,OAGNnC,EAHM,OAIZ8D,EAAS9D,GAJG,gDAMZkE,EAAS,EAAD,IANI,yBAQZF,GAAa,GARD,4EAAH,sDAYbI,EAAQjC,EACT,GAAE,CAACA,KAGF,iCACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAYsB,GAAIE,EAAhB,WACE,SAAC,cAAD,CAAsBU,MAAO,CAAEC,KAAM,SAArC,UACE,SAAC,MAAD,OAEF,8CAIN,SAAC,KAAD,WACE,UAAC,KAAD,YACIP,IAAcE,GAAS/B,IAAS,SAACD,EAAD,CAAcC,MAAOA,IACtD6B,IAAa,SAACvD,EAAA,EAAD,CAAQC,KAAMsD,IAC3BE,IAAS,SAACM,EAAA,EAAD,mDAGd,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACF,EAAA,EAAD,+CAApB,UACE,SAAC,KAAD,QAIP,C,qwBC9DYvB,EAAS,SAAAT,GAGpB,OAAKA,EACC,GAAN,OAHiB,mCAGjB,OAAqBA,GAFA,kDAGtB,EAEYmC,EAAa,SAAAnC,GAGxB,OAAKA,EACC,GAAN,OAHiB,mCAGjB,OAAqBA,GAFA,wDAGtB,EAEYoC,EAAe,SAAAnC,GAC1B,GAAIA,EAAMgB,QAAU,GAAI,OAAOhB,EAC/B,IAAMoC,EAAQpC,EAAMqC,MAAM,EAAG,IACvBC,EAAMtC,EAAMqC,OAAO,IACzB,MAAM,GAAN,OAAUD,EAAV,cAAqBE,EACtB,EAEYC,EAAc,SAAAC,GAEzB,OADa,IAAIC,KAAKD,GAAgB,IAAIC,MAC9BF,aACb,EAEY7B,EAAuB,SAAAJ,GAClC,IAAMoC,EAAYpC,EAAOqC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAClC,OAAIH,EAAU1B,QAAU,EAAU0B,EAAUI,KAAK,KAC3C,GAAN,OAAUJ,EAAUL,MAAM,EAAG,GAAGS,KAAK,MAArC,UACD,EAEYC,EAAoB,SAAAC,GAC/B,IAAQ1C,EAAW2C,EAAAA,EACbP,EAAYM,EAAUL,KAAI,SAAAO,GAC9B,MAAmB5C,EAAO6C,QAAO,qBAAGC,KAAgBF,CAAnB,IACjC,OADA,eAASL,IAEV,IACD,OAAIH,EAAU1B,QAAU,EAAU0B,EAAUI,KAAK,KAC3C,GAAN,OAAUJ,EAAUL,MAAM,EAAG,GAAGS,KAAK,MAArC,UACD,EAEYlC,EAAc,SAAAV,GAAY,OACpCA,EAAuBA,EAAamD,QAAQ,GAA7B,KADqB,C","sources":["api/movies-service.js","components/Loader/Loader.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","utils/infoConverter.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f68110fe6010762197ab45abbadc1a08';\n\nexport const getTrendingFilms = async page => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmsByKeyword = async ({ query, page }) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n      include_adult: false,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmById = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmTrailer = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/videos`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmCast = async movie_id => {\n  const { data } = await axios.get(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getFilmReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return data;\n};\n","import PropTypes from 'prop-types';\nimport { Backdrop, CircularProgress } from '@mui/material';\n\nexport const Loader = ({ open }) => (\n  <>\n    <Backdrop\n      sx={{ color: '#fff', zIndex: theme => theme.zIndex.drawer + 1 }}\n      open={open}\n    >\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  </>\n);\n\nLoader.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  color: var(--color-text-dark);\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    column-gap: 50px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const Thumb = styled.div`\n  overflow: hidden;\n  border-radius: 5px;\n\n  @media screen and (max-width: 768px) {\n    width: 240px;\n    height: 357px;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n    height: auto;\n  }\n`;\n\nexport const FilmInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc(100% - 350px - 50px);\n  }\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 20px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 30px;\n  }\n`;\n\nexport const Table = styled.table`\n  border-spacing: 0 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 400px;\n  }\n`;\n\nexport const InfoLabel = styled.td`\n  vertical-align: top;\n  min-width: 108px;\n  font-weight: 500;\n  color: var(--color-text-secondary);\n  font-size: 12px;\n  line-height: 1.33;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 152px;\n    font-size: 16px;\n  }\n`;\n\nexport const InfoValue = styled.td`\n  font-size: 12px;\n  line-height: 1.33;\n  font-weight: 500;\n  color: var(--color-text-dark);\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Vote = styled.span`\n  display: inline-block;\n  text-align: center;\n  border-radius: 5px;\n  width: 36px;\n  height: 16px;\n  background-color: var(--color-accent);\n  color: var(--color-text-light);\n  margin-right: 4px;\n\n  @media screen and (min-width: 1280px) {\n    width: 40px;\n    height: 20px;\n  }\n`;\n\nexport const VoteCount = styled.span`\n  display: inline-block;\n  text-align: center;\n  border-radius: 5px;\n  width: 36px;\n  height: 16px;\n  background-color: #f7f7f7;\n  margin-left: 4px;\n\n  @media screen and (min-width: 1280px) {\n    width: 40px;\n    height: 20px;\n  }\n`;\n\nexport const About = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 264px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 100%;\n  }\n`;\n\nexport const AboutTitle = styled.div`\n  font-size: 12px;\n  line-height: 1.33;\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const AboutDescription = styled.p`\n  font-size: 12px;\n  line-height: 1.67;\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const List = styled.ul`\n  padding-top: 10px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MoreInfoLink = styled(Link)`\n  color: var(--color-card__text);\n  :hover {\n    color: var(--color-error);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { fixedNumber, getGenresListFromArr, getSrc } from 'utils/infoConverter';\nimport {\n  About,\n  AboutDescription,\n  AboutTitle,\n  FilmInfo,\n  FilmTitle,\n  InfoLabel,\n  InfoValue,\n  Thumb,\n  Vote,\n  VoteCount,\n  Table,\n  Wrap,\n  MoreInfoLink,\n  List,\n} from './MovieDetails.styled';\n\nexport const MovieDetails = ({ movie }) => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    vote_count,\n    popularity,\n    overview,\n    genres,\n  } = movie;\n\n  const src = getSrc(poster_path);\n  const genresNames = getGenresListFromArr(genres);\n  const voteFixed = fixedNumber(vote_average);\n  const popularityFixed = fixedNumber(popularity);\n\n  return (\n    <Wrap>\n      <Thumb className=\"img_wrap\">\n        <img src={src} alt={title} />\n      </Thumb>\n      <FilmInfo>\n        <FilmTitle>{title}</FilmTitle>\n        <Table>\n          <tbody>\n            <tr>\n              <InfoLabel>Vote / Votes</InfoLabel>\n              <InfoValue>\n                <Vote>{voteFixed}</Vote> /<VoteCount>{vote_count}</VoteCount>\n              </InfoValue>\n            </tr>\n            <tr>\n              <InfoLabel>Popularity</InfoLabel>\n              <InfoValue>{popularityFixed}</InfoValue>\n            </tr>\n            <tr>\n              <InfoLabel>Original Title</InfoLabel>\n              <InfoValue>{original_title}</InfoValue>\n            </tr>\n            {genres.length > 0 && (\n              <tr>\n                <InfoLabel>Genre</InfoLabel>\n                <InfoValue>{genresNames}</InfoValue>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n        {overview && (\n          <About>\n            <AboutTitle>OVERVIEW </AboutTitle>\n            <AboutDescription>{overview}</AboutDescription>\n          </About>\n        )}\n        <div>\n          <p>Additional information</p>\n          <List>\n            <li>\n              <MoreInfoLink\n                to={`/movies/${movieId}/cast`}\n                state={location.state}\n              >\n                Cast\n              </MoreInfoLink>\n            </li>\n            <li>\n              <MoreInfoLink\n                to={`/movies/${movieId}/reviews`}\n                state={location.state}\n              >\n                Reviews\n              </MoreInfoLink>\n            </li>\n          </List>\n        </div>\n      </FilmInfo>\n    </Wrap>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    original_title: PropTypes.string,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n    popularity: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ id: PropTypes.number, name: PropTypes.string })\n    ),\n  }),\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getFilmById } from 'api/movies-service';\nimport { Loader } from 'components/Loader';\nimport { Error } from 'components/Error';\nimport { MovieDetails } from 'components/MovieDetails';\nimport { BsArrowLeftCircle } from 'react-icons/bs';\nimport { IconContext } from 'react-icons';\nimport {\n  Container,\n  DarkSection,\n  GoBackLink,\n  LightSection,\n} from 'components/GlobalStyles.styled';\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const path = location.state?.from ?? '/';\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setError(null);\n    const getFilm = async movieId => {\n      try {\n        setIsLoading(true);\n        const data = await getFilmById(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getFilm(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <DarkSection>\n        <Container>\n          <GoBackLink to={path}>\n            <IconContext.Provider value={{ size: '1.4em' }}>\n              <BsArrowLeftCircle />\n            </IconContext.Provider>\n            <span>Go back</span>\n          </GoBackLink>\n        </Container>\n      </DarkSection>\n      <LightSection>\n        <Container>\n          {!isLoading && !error && movie && <MovieDetails movie={movie} />}\n          {isLoading && <Loader open={isLoading} />}\n          {error && <Error>Sorry, something went wrong...</Error>}\n        </Container>\n      </LightSection>\n      <Suspense fallback={<Error>Magic is happening, please wait!</Error>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import allGenres from 'data/genres.json';\n\nexport const getSrc = poster_path => {\n  const BASE_SRC = 'https://image.tmdb.org/t/p/w500';\n  const FALLBACK_SRC = 'https://ik.imagekit.io/blsadqwgu/comingSoon.webp';\n  if (!poster_path) return FALLBACK_SRC;\n  return `${BASE_SRC}${poster_path}`;\n};\n\nexport const getCastSrc = poster_path => {\n  const BASE_SRC = 'https://image.tmdb.org/t/p/w200';\n  const FALLBACK_SRC = 'https://ik.imagekit.io/blsadqwgu/no-person-200x300.png';\n  if (!poster_path) return FALLBACK_SRC;\n  return `${BASE_SRC}${poster_path}`;\n};\n\nexport const converTittle = title => {\n  if (title.length <= 34) return title;\n  const start = title.slice(0, 14);\n  const end = title.slice(-14);\n  return `${start}...${end}`;\n};\n\nexport const getFullYear = release_date => {\n  const date = new Date(release_date || new Date());\n  return date.getFullYear();\n};\n\nexport const getGenresListFromArr = genres => {\n  const genresArr = genres.map(genre => genre.name);\n  if (genresArr.length <= 2) return genresArr.join(' ');\n  return `${genresArr.slice(0, 2).join(', ')}, Other`;\n};\n\nexport const getGenresListById = genre_ids => {\n  const { genres } = allGenres;\n  const genresArr = genre_ids.map(genreId => {\n    const [{ name }] = genres.filter(({ id }) => id === genreId);\n    return name;\n  });\n  if (genresArr.length <= 2) return genresArr.join(' ');\n  return `${genresArr.slice(0, 2).join(', ')}, Other`;\n};\n\nexport const fixedNumber = vote_average =>\n  !vote_average ? '0.0' : vote_average.toFixed(1);\n"],"names":["axios","API_KEY","getTrendingFilms","page","params","api_key","data","getFilmsByKeyword","query","include_adult","getFilmById","movie_id","getFilmCast","getFilmReviews","Loader","open","Backdrop","sx","color","zIndex","theme","drawer","CircularProgress","Wrap","styled","Thumb","FilmInfo","FilmTitle","Table","InfoLabel","InfoValue","Vote","VoteCount","About","AboutTitle","AboutDescription","List","MoreInfoLink","Link","MovieDetails","movie","movieId","useParams","location","useLocation","poster_path","title","original_title","vote_average","vote_count","popularity","overview","genres","src","getSrc","genresNames","getGenresListFromArr","voteFixed","fixedNumber","popularityFixed","className","alt","length","to","state","path","from","useState","setMovie","isLoading","setIsLoading","error","setError","useEffect","getFilm","value","size","Error","Suspense","fallback","getCastSrc","converTittle","start","slice","end","getFullYear","release_date","Date","genresArr","map","genre","name","join","getGenresListById","genre_ids","allGenres","genreId","filter","id","toFixed"],"sourceRoot":""}