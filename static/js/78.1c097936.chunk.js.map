{"version":3,"file":"static/js/78.1c097936.chunk.js","mappings":"oVAGaA,EAAmBC,EAAAA,EAAAA,KAAH,ibAqBhBC,EAAQD,EAAAA,EAAAA,MAAH,+SAiBLE,EAAYF,EAAAA,EAAAA,OAAH,0OAahBG,GAAYC,EAAAA,EAAAA,IAAH,sMAYFC,EAAQL,EAAAA,EAAAA,EAAH,oTAOHG,G,mBCnEFG,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eACA,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAeA,OACE,UAACZ,EAAD,CAAkBa,SAVW,SAAAC,GAC7BA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASF,MAAMG,MACtC,GAAqB,KAAjBH,EAAMI,OAAe,OAAOR,GAAS,GACzCH,EAAgB,CAAEO,MAAAA,IACLF,EAAEG,OACVI,OACN,EAGC,WACE,SAACnB,EAAD,CACEoB,KAAK,OACLC,YAAY,eACZC,KAAK,QACLC,SAnBe,SAAC,GACC,KADyB,EAAxBR,OAAUE,MACtBC,QAAeR,GAAS,EACnC,KAmBG,SAACT,EAAD,CAAWmB,KAAK,SAAS,aAAW,SAApC,UACE,SAAC,cAAD,CAAsBH,MAAO,CAAEO,KAAM,OAArC,UACE,SAAC,MAAD,QAGHf,IAAS,SAACL,EAAD,0CAGf,E,oBC0CD,EAlEmB,WACjB,OAAqBE,EAAAA,EAAAA,MAAhBmB,GAAL,eACA,GAA4BjB,EAAAA,EAAAA,UAAS,MAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAAwBnB,EAAAA,EAAAA,UAAS,GAAjC,eAAOoB,EAAP,KAAaC,EAAb,KACA,GAAoCrB,EAAAA,EAAAA,UAAS,GAA7C,eAAOsB,EAAP,KAAmBC,EAAnB,KACA,GAAkCvB,EAAAA,EAAAA,WAAS,GAA3C,eAAOwB,EAAP,KAAkBC,EAAlB,KACA,GAA0BzB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAwB,EAAAA,EAAAA,GAAcJ,IAEdK,EAAAA,EAAAA,YAAU,WACRzB,EAAS,MACT,IAAMI,EAAQW,EAAaW,IAAI,UAAY,GAC3C,GAAc,KAAVtB,EAAJ,CAEA,IAAMuB,EAAQ,mCAAG,oGAASvB,EAAT,EAASA,MAAOc,EAAhB,EAAgBA,KAAhB,SAEbK,GAAa,GAFA,UAG0BK,EAAAA,EAAAA,IAAkB,CACvDxB,MAAAA,EACAc,KAAAA,IALW,gBAGLW,EAHK,EAGLA,QAASC,EAHJ,EAGIA,YAIjBb,EAAUY,GACVR,EAAcS,GARD,kDAUb9B,EAAS,EAAD,IAVK,yBAYbuB,GAAa,GAZA,6EAAH,sDAgBdI,EAAS,CAAEvB,MAAAA,EAAOc,KAAAA,GAlBM,CAmBzB,GAAE,CAACA,EAAMH,IAIV,OACE,iCACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAACpB,EAAD,SAGJ,SAAC,KAAD,WACE,UAAC,KAAD,WACGqB,GAAUA,EAAOe,OAAS,IAAMT,IAAcvB,IAC7C,SAACiC,EAAA,EAAD,CAAYhB,OAAQA,IAErBA,GAA4B,IAAlBA,EAAOe,SAAiBT,IAAcvB,IAC/C,SAAC,IAAD,gEAEDuB,IAAa,SAACW,EAAA,EAAD,CAAQC,KAAMZ,IAC3BvB,IAAS,SAAC,IAAD,8CACRuB,IAAcvB,GAASqB,EAAa,IACpC,SAACe,EAAA,EAAD,CACEC,MAAOhB,EACPF,KAAMA,EACNL,SAvBS,SAACwB,EAAGC,GAAJ,OAAiBnB,EAAQmB,EAAzB,WA8BtB,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import { keyframes } from '@emotion/css';\nimport styled from '@emotion/styled';\n\nexport const SearchFormStyled = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  border-bottom: 0.5px solid var(--color-text-light);\n  transition: border-bottom 250ms var(--cubic);\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 394px;\n  }\n\n  &:focus-within {\n    border-bottom: 0.5px solid var(--color-accent);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  background-color: transparent;\n  border: none;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.14;\n  color: var(--color-text-light);\n  outline: none;\n\n  &::placeholder {\n    font-size: 14px;\n    line-height: 1.14;\n    color: #ffffff4f;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  background-color: transparent;\n  border: none;\n  color: var(--color-text-light);\n  transition: color 250ms var(--cubic);\n  outline: none;\n\n  &:hover,\n  &:focus {\n    color: var(--color-accent);\n  }\n`;\n\nconst trambling = keyframes`\n 0%, 50%, 100% {\n        transform: rotate(0deg);\n    }\n    10%, 30% {\n        transform: rotate(-4deg);\n    }\n    20%, 40% {\n        transform: rotate(4deg);\n    }\n`;\n\nexport const Error = styled.p`\n  position: absolute;\n  top: 65%;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.14;\n  color: var(--color-error);\n  animation: ${trambling} 1.2s ease-in-out 0s normal none running;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n    text-align: center;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport { Error, Input, SearchBtn, SearchFormStyled } from './SearchForm.styled';\nimport { useState } from 'react';\n\nexport const SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(false);\n\n  const handleChange = ({ target: { value } }) => {\n    if (value.trim() !== '') setError(false);\n  };\n\n  const handleSearchFormSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    if (query.trim() === '') return setError(true);\n    setSearchParams({ query });\n    const form = e.target;\n    form.reset();\n  };\n\n  return (\n    <SearchFormStyled onSubmit={handleSearchFormSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Movie search\"\n        name=\"query\"\n        onChange={handleChange}\n      />\n      <SearchBtn type=\"submit\" aria-label=\"search\">\n        <IconContext.Provider value={{ size: '1em' }}>\n          <FaSearch />\n        </IconContext.Provider>\n      </SearchBtn>\n      {error && <Error>Please, enter your query!</Error>}\n    </SearchFormStyled>\n  );\n};\n","import usePagination from '@mui/material/usePagination/usePagination';\nimport {\n  Container,\n  DarkSection,\n  LightSection,\n} from 'components/GlobalStyles.styled';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\nimport { MuiPagination } from 'components/MuiPagination';\nimport { SearchForm } from 'components/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmsByKeyword } from 'api/movies-service';\nimport { Error } from 'components/Error';\n\nconst MoviesPage = () => {\n  let [searchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  usePagination(totalPages);\n\n  useEffect(() => {\n    setError(null);\n    const query = searchParams.get('query') || '';\n    if (query === '') return;\n\n    const getFilms = async ({ query, page }) => {\n      try {\n        setIsLoading(true);\n        const { results, total_pages } = await getFilmsByKeyword({\n          query,\n          page,\n        });\n        setMovies(results);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getFilms({ query, page });\n  }, [page, searchParams]);\n\n  const handleChange = (_, nextPage) => setPage(nextPage);\n\n  return (\n    <>\n      <DarkSection>\n        <Container>\n          <SearchForm />\n        </Container>\n      </DarkSection>\n      <LightSection>\n        <Container>\n          {movies && movies.length > 0 && !isLoading && !error && (\n            <MoviesList movies={movies} />\n          )}\n          {movies && movies.length === 0 && !isLoading && !error && (\n            <Error>Sorry, there is no such films. Please, try again.</Error>\n          )}\n          {isLoading && <Loader open={isLoading} />}\n          {error && <Error>Sorry, something went wrong...</Error>}\n          {!isLoading && !error && totalPages > 1 && (\n            <MuiPagination\n              count={totalPages}\n              page={page}\n              onChange={handleChange}\n            />\n          )}\n        </Container>\n      </LightSection>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["SearchFormStyled","styled","Input","SearchBtn","trambling","keyframes","Error","SearchForm","useSearchParams","setSearchParams","useState","error","setError","onSubmit","e","preventDefault","query","target","elements","value","trim","reset","type","placeholder","name","onChange","size","searchParams","movies","setMovies","page","setPage","totalPages","setTotalPages","isLoading","setIsLoading","usePagination","useEffect","get","getFilms","getFilmsByKeyword","results","total_pages","length","MoviesList","Loader","open","MuiPagination","count","_","nextPage"],"sourceRoot":""}