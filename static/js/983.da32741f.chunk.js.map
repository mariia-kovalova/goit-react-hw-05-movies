{"version":3,"file":"static/js/983.da32741f.chunk.js","mappings":"iRAwEA,UA1DiB,WACf,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KACMC,GAAiBC,EAAAA,EAAAA,GAAcP,IAErCQ,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,WAAMX,GAAN,2FAEbO,EAAS,MACTF,GAAa,GAHA,UAI0BO,EAAAA,EAAAA,IAAiBZ,GAJ3C,gBAILa,EAJK,EAILA,QAASC,EAJJ,EAIIA,YACjBf,EAAUc,GACVV,EAAcW,GAND,kDAQbP,EAAS,EAAD,IARK,yBAUbF,GAAa,GAVA,6EAAH,sDAcdM,EAASX,EACV,GAAE,CAACA,IAOJ,OACE,iCACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,gCAGJ,SAAC,KAAD,WACE,UAAC,KAAD,WACGF,EAAOiB,OAAS,IAAMX,IAAcE,IACnC,SAAC,IAAD,CAAYR,OAAQA,IAErBM,IAAa,SAAC,IAAD,CAAQY,KAAMZ,IAC3BE,IAAS,SAAC,IAAD,8CACRF,IAAcE,GAASJ,EAAa,IACpC,SAAC,IAAD,CACEe,MAAOf,EACPF,KAAMA,EACNkB,SAvBS,SAACC,EAAGC,GACvBnB,EAAQmB,GACRZ,EAAea,KAAKD,EACrB,WA2BF,C","sources":["pages/HomePage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\nimport { getTrendingFilms } from 'api/movies-service';\nimport usePagination from '@mui/material/usePagination/usePagination';\nimport { MuiPagination } from 'components/MuiPagination';\nimport {\n  Container,\n  DarkSection,\n  LightSection,\n  MainTitle,\n} from 'components/GlobalStyles.styled';\nimport { Error } from 'components/Error';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const paginationData = usePagination(totalPages);\n\n  useEffect(() => {\n    const getFilms = async page => {\n      try {\n        setError(null);\n        setIsLoading(true);\n        const { results, total_pages } = await getTrendingFilms(page);\n        setMovies(results);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getFilms(page);\n  }, [page]);\n\n  const handleChange = (_, nextPage) => {\n    setPage(nextPage);\n    paginationData.jump(nextPage);\n  };\n\n  return (\n    <>\n      <DarkSection>\n        <Container>\n          <MainTitle>Trending now</MainTitle>\n        </Container>\n      </DarkSection>\n      <LightSection>\n        <Container>\n          {movies.length > 0 && !isLoading && !error && (\n            <MoviesList movies={movies} />\n          )}\n          {isLoading && <Loader open={isLoading} />}\n          {error && <Error>Sorry, something went wrong...</Error>}\n          {!isLoading && !error && totalPages > 1 && (\n            <MuiPagination\n              count={totalPages}\n              page={page}\n              onChange={handleChange}\n            />\n          )}\n        </Container>\n      </LightSection>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["useState","movies","setMovies","page","setPage","totalPages","setTotalPages","isLoading","setIsLoading","error","setError","paginationData","usePagination","useEffect","getFilms","getTrendingFilms","results","total_pages","length","open","count","onChange","_","nextPage","jump"],"sourceRoot":""}